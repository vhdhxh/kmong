<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--회원가입-->
<mapper namespace="com.longlive.kmong.DAO.User">
   <insert id="insertUser" parameterType="com.longlive.kmong.DTO.UserDTO">
       INSERT INTO USER
       (user_id,
       user_email,
       user_password,
       user_name,
       user_address,
       user_phonenum,
       user_gender,
       provider,
       providerId
       )
       values (
       null,
       #{user_email},
       #{user_password},
       #{user_name},
       #{user_address},
       #{user_phonenum},
       #{user_gender},
       #{provider},
       #{providerId})
       <selectKey resultType="Long" keyProperty="user_id" keyColumn="user_id" order="AFTER">
           SELECT LAST_INSERT_ID()
       </selectKey>
   </insert>

    <select id="selectUserName" resultType="com.longlive.kmong.DTO.UserDTO">
        select * from user
        where user_name = #{name}
    </select>

    <select id="selectUserEmail" resultType="com.longlive.kmong.DTO.UserDTO">
        select *
        from user
        where user_email = #{user_email}

    </select>

    <select id="selectUserEmail2" resultType="Map">
        select *
        from user
        where user_email = #{email}

    </select>

    <select id="selectUserAddress">
        select user_address
        from user

    </select>

    <select id="selectReceiverNickname" resultType="String">
        select user_name
        from user
        where user_Id = #{user_Id}


    </select>

<!-- 이메일 중복검사-->
<select id="CheckEmailValidation" resultType="boolean">
    select IF(COUNT(*) = 1, 1, 0)
    from user
    where user_email= #{user_email};
</select>

<!--    문자인증 검증-->
<select id="SelectByNameAndPhoneAndEmail" resultType="boolean" parameterType="Map">
    select IF(COUNT(*) = 1, 1, 0)
    from user
    where user_email= #{email} and user_name=#{name} and user_phonenum = #{phone};

</select>

    <!--비밀번호변경-->
    <update id="passwordUpdate" parameterType="Map">
        update User set

        user_password = #{password}


        where user_email = #{email}
    </update>
<!--  유저이미지변경-->
    <update id="updateImage" parameterType="Map">
        update User set

        user_image = #{image}


        where user_email = #{email}
    </update>
<!--    유저 이름변경-->
    <update id="updateName" parameterType="Map">
        update User set
        user_name = #{name}
        where user_email = #{email}


    </update>
<!--    유저 이메일 변경-->
    <update id="updateEmail" parameterType="Map">
        update User set
        user_email = #{email1}
        where user_email = #{email2}


    </update>

<!-- 유저 패스워드 변경 -->
    <update id="updatePassword" parameterType="Map">
        update User set
        user_password = #{password}
        where user_email = #{email}
    </update>


</mapper>